C51 COMPILER V9.00   DS18B20                                                               08/04/2018 16:19:03 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE DS18B20
OBJECT MODULE PLACED IN DS18B20.OBJ
COMPILER INVOKED BY: E:\keil\C51\BIN\C51.EXE DS18B20.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include"header.h"
   2          
   3          uchar DisplayData1[8];    //温度采集值的段码
   4          float Temp;               //温度
   5          
   6          
   7          /*******************************************************************************
   8          * 函 数 名         : Delay1ms()
   9          * 函数功能                 : 延时函数
  10          * 输    入         : 无
  11          * 输    出         : 无
  12          *******************************************************************************/
  13          
  14          void Delay1ms(uint y)
  15          {
  16   1              uint x;
  17   1              for( ; y>0; y--)
  18   1              {
  19   2                      for(x=110; x>0; x--);
  20   2              }
  21   1      }
  22          /*******************************************************************************
  23          * 函 数 名         : Ds18b20Init()
  24          * 函数功能                 : 初始化
  25          * 输    入         : 无
  26          * 输    出         : 初始化成功返回1，失败返回0
  27          *******************************************************************************/
  28          
  29          uchar Ds18b20Init()
  30          {
  31   1              uchar i;
  32   1              DSPORT = 0;                     //将总线拉低480us~960us
  33   1              i = 70; 
  34   1              while(i--);         //延时642us
  35   1              DSPORT = 1;                     //然后拉高总线，如果DS18B20做出反应会将在15us~60us后总线拉低
  36   1              i = 0;
  37   1              while(DSPORT)       //等待DS18B20拉低总线
  38   1              {
  39   2                      Delay1ms(1);
  40   2                      i++;
  41   2                      if(i>5)         //等待>5MS
  42   2                      {
  43   3                              return 0;   //初始化失败
  44   3                      }
  45   2              
  46   2              }
  47   1              return 1;           //初始化成功
  48   1      }
  49          
  50          /*******************************************************************************
  51          * 函 数 名         : Ds18b20WriteByte()
  52          * 函数功能                 : 向18B20写入一个字节
  53          * 输    入         : 无
  54          * 输    出         : 无
  55          *******************************************************************************/
C51 COMPILER V9.00   DS18B20                                                               08/04/2018 16:19:03 PAGE 2   

  56          
  57          void Ds18b20WriteByte(uchar dat)
  58          {
  59   1              uint i, j;
  60   1      
  61   1              for(j=0; j<8; j++)
  62   1              {
  63   2                      DSPORT = 0;               //每写入一位数据之前先把总线拉低1us
  64   2                      i++;
  65   2                      DSPORT = dat & 0x01;  //然后写入一个数据，从最低位开始
  66   2                      i=6;
  67   2                      while(i--); //延时68us，持续时间最少60us
  68   2                      DSPORT = 1;     //然后释放总线，至少1us给总线恢复时间才能接着写入第二个数值
  69   2                      dat >>= 1;
  70   2              }
  71   1      }
  72          /*******************************************************************************
  73          * 函 数 名         : Ds18b20ReadByte()
  74          * 函数功能                 : 读取一个字节
  75          * 输    入         : 无
  76          * 输    出         : 无
  77          *******************************************************************************/
  78          
  79          
  80          uchar Ds18b20ReadByte()
  81          {
  82   1              uchar byte, bi;
  83   1              uint i, j;      
  84   1              for(j=8; j>0; j--)
  85   1              {
  86   2                      DSPORT = 0;//先将总线拉低1us
  87   2                      i++;
  88   2                      DSPORT = 1;//然后释放总线
  89   2                      i++;
  90   2                      i++;       //延时6us等待数据稳定
  91   2                      bi = DSPORT;     //读取数据，从最低位开始读取
  92   2                      /*将byte右移一位，然后与上左移7位后的bi，注意移动之后移掉那位补0。*/
  93   2                      byte = (byte >> 1) | (bi << 7);                                           
  94   2                      i = 4;          //读取完之后等待48us再接着读取下一个数
  95   2                      while(i--);
  96   2              }                               
  97   1              return byte;
  98   1      }
  99          /*******************************************************************************
 100          * 函 数 名         : Ds18b20ChangTemp
 101          * 函数功能                 : 让18b20开始转换温度
 102          * 输    入         : 无
 103          * 输    出         : 无
 104          *******************************************************************************/
 105          
 106          void  Ds18b20ChangTemp()
 107          {
 108   1              Ds18b20Init();
 109   1              Delay1ms(1);
 110   1              Ds18b20WriteByte(0xcc);         //跳过ROM操作命令                
 111   1              Ds18b20WriteByte(0x44);     //温度转换命令
 112   1      }
 113          /*******************************************************************************
 114          * 函 数 名         : Ds18b20ReadTempCom()
 115          * 函数功能                 : 发送读取温度命令
 116          * 输    入         : 无
 117          * 输    出         : 无
C51 COMPILER V9.00   DS18B20                                                               08/04/2018 16:19:03 PAGE 3   

 118          *******************************************************************************/
 119          
 120          void  Ds18b20ReadTempCom()
 121          {       
 122   1              Ds18b20Init();
 123   1              Delay1ms(1);
 124   1              Ds18b20WriteByte(0xcc);  //跳过ROM操作命令
 125   1              Ds18b20WriteByte(0xbe);  //发送读取温度命令
 126   1      }
 127          /*******************************************************************************
 128          * 函 数 名         : Ds18b20ReadTemp()
 129          * 函数功能                 : 读取温度
 130          * 输    入         : 无
 131          * 输    出         : 无
 132          *******************************************************************************/
 133          
 134          int Ds18b20ReadTemp()
 135          {
 136   1              int temp = 0;
 137   1              uchar tmh, tml;
 138   1              Ds18b20ChangTemp();                             //先写入转换命令
 139   1              Ds18b20ReadTempCom();                   //然后等待转换完后发送读取温度命令
 140   1              tml = Ds18b20ReadByte();                //读取温度值共16位，先读低字节
 141   1              tmh = Ds18b20ReadByte();                //再读高字节
 142   1              temp = tmh;
 143   1              temp <<= 8;
 144   1              temp |= tml;
 145   1              return temp;
 146   1      }
 147          
 148          
 149          
 150          /*******************************************************************************
 151          * 函 数 名         : delay()
 152          * 函数功能                 : 延时函数，i=1时，大约延时10us
 153          *******************************************************************************/
 154          void delay(uint i)
 155          {
 156   1              while(i--);     
 157   1      }
 158          
 159          
 160          /*******************************************************************************
 161          * 函 数 名         : datapros()
 162          * 函数功能                 : 温度读取处理转换函数
 163          * 输    入         : temp
 164          * 输    出         : 无
 165          *******************************************************************************/
 166          
 167          void datapros(int temp)          
 168          {
 169   1              float tp;  
 170   1              if(temp< 0)                             //当温度值为负数
 171   1              {
 172   2                      DisplayData1[0] = 0x40;           //   -
 173   2                      //因为读取的温度是实际温度的补码，所以减1，再取反求出原码
 174   2                      temp=temp-1;
 175   2                      temp=~temp;
 176   2                      tp=temp;
 177   2                      temp=tp*0.0625*100+0.5; 
 178   2                      //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
 179   2                      //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
C51 COMPILER V9.00   DS18B20                                                               08/04/2018 16:19:03 PAGE 4   

 180   2                      //算加上0.5，还是在小数点后面。
 181   2       
 182   2              }
 183   1              else
 184   1              {                       
 185   2                      DisplayData1[0] = 0x00;
 186   2                      tp=temp;//因为数据处理有小数点所以将温度赋给一个浮点型变量
 187   2                      //如果温度是正的那么，那么正数的原码就是补码它本身
 188   2                      temp=tp*0.0625*100+0.5; 
 189   2                      //留两个小数点就*100，+0.5是四舍五入，因为C语言浮点数转换为整型的时候把小数点
 190   2                      //后面的数自动去掉，不管是否大于0.5，而+0.5之后大于0.5的就是进1了，小于0.5的就
 191   2                      //算加上0.5，还是在小数点后面。
 192   2              }
 193   1              Temp = temp / 100;       //得到温度采集值
 194   1              DisplayData1[1] = smgduan[temp / 10000];
 195   1              DisplayData1[2] = smgduan[temp % 10000 / 1000];
 196   1              DisplayData1[3] = smgduan[temp % 1000 / 100] | 0x80;
 197   1              DisplayData1[4] = smgduan[temp % 100 / 10];
 198   1              DisplayData1[5] = smgduan[temp % 10];
 199   1      }
 200          
 201          
 202          
 203          
 204          
 205          
 206          
 207          
 208          
 209          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    524    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     12       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
